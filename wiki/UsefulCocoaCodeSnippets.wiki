#summary The Cococa code you may use in the daily programming.
#labels iOS,Cocoa,iPhone,Nevel

<wiki:toc max_depth="2" />

== Create a UIViewController object manually ==

{{{
mainView = [[MercuryViewController alloc] init];
}}}

== Create a UIView object manually ==

{{{
UIView *vc = [[UIView alloc] initWithFrame:[[UIScreen mainScreen] applicationFrame]];
}}}

== Add subview ==

{{{
[mainView.view addSubview:tf];
}}}

or

{{{
[mainView.view insertSubview:tf atIndex:0];
}}}

== Create a UIImageView manually ==

{{{
UIImageView *iv = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"NebulaBackground.png"]];
}}}

== Create a UITextField manually ==

{{{
UITextField *tf = [[UITextField alloc] initWithFrame:CGRectMake(0.0f, 0.0f, 100.0f, 30.0f)];
	tf.center = CGPointMake(160.0f, 320.0f);
	tf.borderStyle = UITextBorderStyleRoundedRect;
	tf.autocorrectionType = UITextAutocorrectionTypeNo;
	tf.placeholder = @"Name";
	tf.returnKeyType = UIReturnKeyDone;
	tf.clearButtonMode = UITextFieldViewModeWhileEditing;
	tf.delegate = self;
}}}

== Make your textField to be a pasword field ==

{{{
[passwordField setSecureTextEntry:YES];
}}}
== Move a subview manually ==

{{{
[UIView animateWithDuration:1.0 animations:^{
	mainView.view.frame = 
	CGRectMake(0, -200, mainView.view.frame.size.width, mainView.view.frame.size.height);
}];
}}}

== add events to a controller manually ==

{{{
[the controller addTarget:self 
                   action:@selector(actionMethod:) 
         forControlEvents:UIControlEventTouchDown];
}}}

== about naming ==

  * Temporary object naming: *objectNameTemp*

     eg:

{{{
UILabel *labelTemp = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 78, 20)];
self.loginLabel = labelTemp;
[labelTemp release];
}}}

== about UIColor ==

A UIColor object represents *color* and sometimes *opacity* (alpha value).

Can: store color data

|| Preset Component Values || RGB value || grayscale value || alpha value || explanation ||
|| blackColor ||  || 0.0 || 1.0 ||
|| clearColor ||  ||  0.0 || 0.0 ||
|| whiteColor ||  || 1.0 || 1.0 ||
|| blueColor || 0.0, 0.0, 1.0 ||  || 1.0 ||
|| brownColor || 0.6, 0.4, 0.2 ||  || 1.0 ||
|| darkTextColor ||  ||  ||  || Returns the system color used for displaying text on a light background. ||
|| groupTableViewBackgroundColor ||  ||  ||  || Returns the system color used for the background of a grouped table. ||

colorWithRed:green:blue:alpha:
{{{
+ (UIColor *)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha
}}}
  _red, green, blue, alpha: value from 0.0 to 1.0._

== about returnKeyType ==

   * UIReturnKeyDefault (Default value)
   * UIReturnKeyGo,
   * UIReturnKeyGoogle,
   * UIReturnKeyJoin,
   * UIReturnKeyNext (used when there are more than one textfield need to be filled, and not the last one),
   * UIReturnKeyRoute,
   * UIReturnKeySearch,
   * UIReturnKeySend,
   * UIReturnKeyYahoo,
   * UIReturnKeyDone,
   * UIReturnKeyEmergencyCall

== UITableVIewCell ==

=== Cell Selection Style ===
  * UITableViewCellSelectionStyleNone (used when the cell can be edit, such as login text field)
  * UITableViewCellSelectionStyleBlue
  * UITableViewCellSelectionStyleGray

== UIButton ==

=== Control Events ===
{{{
enum {
   UIControlEventTouchDown           = 1 <<  0,
   UIControlEventTouchDownRepeat     = 1 <<  1,
   UIControlEventTouchDragInside     = 1 <<  2,
   UIControlEventTouchDragOutside    = 1 <<  3,
   UIControlEventTouchDragEnter      = 1 <<  4,
   UIControlEventTouchDragExit       = 1 <<  5,
   UIControlEventTouchUpInside       = 1 <<  6,
   UIControlEventTouchUpOutside      = 1 <<  7,
   UIControlEventTouchCancel         = 1 <<  8,
   
   UIControlEventValueChanged        = 1 << 12,
   
   UIControlEventEditingDidBegin     = 1 << 16,
   UIControlEventEditingChanged      = 1 << 17,
   UIControlEventEditingDidEnd       = 1 << 18,
   UIControlEventEditingDidEndOnExit = 1 << 19,
   
   UIControlEventAllTouchEvents      = 0x00000FFF,
   UIControlEventAllEditingEvents    = 0x000F0000,
   UIControlEventApplicationReserved = 0x0F000000,
   UIControlEventSystemReserved      = 0xF0000000,
   UIControlEventAllEvents           = 0xFFFFFFFF
};
}}}

== UIActionSheet ==

purpose
  * to present the user with a set of alternatives for how to proceed with a given task
  * to prompt the user to confirm a potentially dangerous action



== plist ==

===  read a plist ===

{{{
NSString *key = @"plistKeyName";
NSArray *plistArray = [uiDictionary objectForKey:key];
[plistArray objectAtIndex:4]
}}}